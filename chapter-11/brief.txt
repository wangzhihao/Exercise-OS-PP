1. The unlink will success, and the process who opens the file will still be able to access / modify
the file. I.E. the file is not deleted when it is unlinked. The unlink operation only unbind the
*name / path* from the file. The file is removed by garbage collector when no *reference* points to
the file.
The *reference* is different from the *name / path*. See more in
http://stackoverflow.com/questions/19441823/a-file-opened-for-read-and-write-can-be-unlinked


2. see problem-2/code.c
The file is unlinked without raising any errors.


3. The output of problem-3/code_version_1.c

  32 microseconds used to open file.
  397 microseconds used to write 100KB data.
  21 microseconds used to close file.

The output of problem-3/code_version_2.c
  38 microseconds used to open file.
  2912 microseconds used to write 100KB data in one trip with fsync.
  251 microseconds used to close file.


4.
